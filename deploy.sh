#!/bin/bash
set -e

# DeÄŸiÅŸkenleri tanÄ±mla
REPO_URL="https://github.com/bbatus/Exam_Mate.git"
DEPLOY_DIR=~/exam_mate
NGINX_CONF_FILE=nginx-goexammate.conf

echo "ğŸ”„ Deployment baÅŸlatÄ±lÄ±yor..."

# EÄŸer varsa, mevcut docker container'larÄ± durdur
docker-compose -f $DEPLOY_DIR/docker-compose.yml down 2>/dev/null || true

# Ã–nceki daÄŸÄ±tÄ±mdan kalan dosyalarÄ± temizle, ancak veritabanÄ± verilerini koru
if [ -d "$DEPLOY_DIR" ]; then
    cd $DEPLOY_DIR
    # EÄŸer varsa, veritabanÄ± volume'unu yedekle
    docker volume ls | grep postgres_data > /dev/null 2>&1 && echo "ğŸ“¦ VeritabanÄ± volume'u korunuyor..."
    
    # Mevcut git repo'yu gÃ¼ncelle (daha hÄ±zlÄ±)
    echo "ğŸ“¥ Git repo gÃ¼ncelleniyor..."
    git fetch --all
    
    # Problematik dosyalarÄ± temizle
    echo "ğŸ§¹ Problematik dosyalarÄ± temizleniyor..."
    sudo rm -rf backend/dist/ || true
    sudo rm -rf node_modules/ || true
    
    # Sahiplik sorunlarÄ±nÄ± Ã§Ã¶z
    sudo chown -R $(whoami):$(whoami) . || true
    
    # Git reset iÅŸlemini gerÃ§ekleÅŸtir
    git reset --hard origin/main
else
    # Repo yoksa, yeni klonla
    echo "ğŸ“¥ Repo klonlanÄ±yor..."
    mkdir -p $DEPLOY_DIR
    git clone --depth 1 $REPO_URL $DEPLOY_DIR
    cd $DEPLOY_DIR
fi

# Nginx yapÄ±landÄ±rmasÄ±nÄ± gÃ¼ncelle
echo "ğŸ”§ Nginx yapÄ±landÄ±rmasÄ± gÃ¼ncelleniyor..."
sudo cp ~/$NGINX_CONF_FILE /etc/nginx/sites-available/goexammate
sudo ln -sf /etc/nginx/sites-available/goexammate /etc/nginx/sites-enabled/
sudo rm -f /etc/nginx/sites-enabled/default
sudo nginx -t && sudo systemctl reload nginx

# Docker Compose ile deploy
echo "ğŸš€ Docker Compose ile build ve deploy baÅŸlatÄ±lÄ±yor..."
docker-compose build --no-cache
docker-compose up -d

# VeritabanÄ± migrasyonlarÄ±nÄ± uygula
echo "ğŸ”„ VeritabanÄ± migrasyonlarÄ± uygulanÄ±yor..."
sleep 10  # VeritabanÄ± ve backend'in baÅŸlamasÄ± iÃ§in bekle
docker exec exam_mate_backend npx prisma migrate deploy
docker exec exam_mate_backend npx prisma generate

echo "âœ… Deployment tamamlandÄ±!" 